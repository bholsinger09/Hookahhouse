{"ast":null,"code":"var _jsxFileName = \"/Users/benholsinger/dev/HookahSite/hookahsite-frontend/src/Pages/getQuote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetQuote = props => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [question, setQuestion] = useState(\"\");\n\n  const submitQuestion = async () => {\n    try {\n      Axios.post('http://localhost:8000/create', {\n        name: name,\n        email: email,\n        question: question\n      }).then(response => {\n        console.log(response);\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  /*\n  This was used to test the state of name, email, and question\n   const dispFields = () => {\n    console.log(\"hit first\");\n    console.log(name + email + question);\n    console.log(name);\n    console.log(\"hit last\");\n    \n    \n  };\n  \n  */\n\n  /*\n  This is used in case prevent defualt needs used \n  function handleSubmit(e) {\n  e.preventDefault();    }\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"quoteForm\" //onSubmit={handleSubmit}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"quoteTitle\",\n        children: \"Quote Help Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"quotePar\",\n        children: \"Please provide your Name, Contact Email, and what products you would like more information about in this form :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"formName\",\n        className: \"Form\",\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          onChange: event => {\n            setName(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"formEmail\",\n        className: \"Form\",\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          onChange: event => {\n            setEmail(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"formQuestion\",\n        className: \"Form\",\n        children: [\"What products would you like to know more about:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"help\",\n          onChange: event => {\n            setQuestion(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"quoteSubmit\",\n        type: \"submit\" //funtion is called however seems to constantly call the useState which is used in onchange\n        //when submit is done returns empty string \n        ,\n        onClick: submitQuestion,\n        children: \"Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }, this), \"\\u203A\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n\n_s(GetQuote, \"180C43xxDwTaDpjtqFRJqKCY5mk=\");\n\n_c = GetQuote;\nexport default GetQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetQuote\");","map":{"version":3,"sources":["/Users/benholsinger/dev/HookahSite/hookahsite-frontend/src/Pages/getQuote.js"],"names":["React","useState","Axios","response","GetQuote","props","name","setName","email","setEmail","question","setQuestion","submitQuestion","post","then","console","log","err","error","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n import {useState} from 'react';\n import Axios from 'axios'\n import { response } from 'express';\n\n\n const GetQuote = (props) => {\n\n\n   const [name, setName] = useState(\"\");\n   const [email, setEmail] = useState(\"\");\n   const [question, setQuestion] = useState(\"\");\n\n   const submitQuestion = async() => { try {\n    Axios.post('http://localhost:8000/create',\n    {\n      name:name , \n      email:email , \n      question:question\n    }).then((response)=> {console.log(response)})\n   } catch (err) {console.error(err);\n       \n   }\n    \n   }\n\n   /*\n   This was used to test the state of name, email, and question\n\n   const dispFields = () => {\n     console.log(\"hit first\");\n     console.log(name + email + question);\n     console.log(name);\n     console.log(\"hit last\");\n     \n     \n   };\n   \n   */\n\n   /*\n   This is used in case prevent defualt needs used \n function handleSubmit(e) {\n e.preventDefault();    }\n   */\n\n\n\n\n\n\n     return(\n         <React.Fragment>\n\n\n\n     <form id=\"quoteForm\" \n     //onSubmit={handleSubmit}\n     >\n       <h1 id=\"quoteTitle\">Quote Help Form</h1>\n       <p id=\"quotePar\">Please provide your Name, Contact Email, and what products you would like more information about in this form :</p>\n\n   <label id=\"formName\" className=\"Form\">\n     Name:\n     <input type=\"text\" name=\"name\" \n\n     onChange={(event) => { setName(event.target.value);}}\n\n     />\n   </label>\n\n   <label id=\"formEmail\" className=\"Form\">\n     Email:\n     <input type=\"text\" name=\"email\" \n     onChange={(event) => { setEmail(event.target.value);\n     }}/>\n   </label>\n   <br/>\n   <label id=\"formQuestion\" className=\"Form\" >\n     What products would you like to know more about:\n     <input type=\"text\" name=\"help\" \n     onChange={(event) => { setQuestion(event.target.value);\n     }}/>\n   </label>\n\n   <br/>\n   <br/>\n\n   <button id=\"quoteSubmit\" type=\"submit\" \n\n   //funtion is called however seems to constantly call the useState which is used in onchange\n   //when submit is done returns empty string \n\n   onClick = {\n     submitQuestion\n   }\n   >Submit </button>\n\n   </form>\n\n   â€º\n\n\n         </React.Fragment>\n\n     )\n };\n\n export default GetQuote; "]},"metadata":{},"sourceType":"module"}